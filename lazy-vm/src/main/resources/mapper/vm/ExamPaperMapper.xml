<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lazy.vm.mapper.ExamPaperMapper">

    <resultMap type="ExamPaper" id="ExamPaperResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="totalScore" column="total_score"/>
        <result property="type" column="type"/>
        <result property="category" column="category"/>
        <result property="quCount" column="qu_count"/>
        <result property="examId" column="exam_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="userScore" column="user_score"/>
        <result property="status" column="status"/>
        <result property="qualifyScore" column="qualifyScore"/>
    </resultMap>

    <sql id="selectExamPaperVo">
        select id,
               user_id,
               title,
               total_score,
               type,
               category,
               qu_count,
               exam_id,
               create_time,
               update_time,
               user_score,
               status
        from edu_exam_paper
    </sql>

    <select id="selectExamPaperList" parameterType="ExamPaper" resultMap="ExamPaperResult">
        <include refid="selectExamPaperVo"/>
        <where>
            <if test="userId != null  and userId != ''">and user_id = #{userId}</if>
            <if test="title != null  and title != ''">and title = #{title}</if>
            <if test="totalScore != null ">and total_score = #{totalScore}</if>
            <if test="type != null ">and type = #{type}</if>
            <if test="category != null  and category != ''">and category = #{category}</if>
            <if test="quCount != null ">and qu_count = #{quCount}</if>
            <if test="examId != null  and examId != ''">and exam_id = #{examId}</if>
            <if test="userScore != null ">and user_score = #{userScore}</if>
            <if test="status != null  and status != ''">and status = #{status}</if>
        </where>
    </select>

    <select id="getExamPaperList" parameterType="ExamPaper" resultMap="ExamPaperResult">
        <include refid="selectExamPaperVo"/>
        <where>
            <if test="userId != null  and userId != ''">and user_id = #{userId}</if>
            <if test="examId != null  and examId != ''">and exam_id = #{examId}</if>
        </where>
    </select>

    <select id="selectExamPaperById" parameterType="String" resultMap="ExamPaperResult">
        <include refid="selectExamPaperVo"/>
        where id = #{id}
    </select>

    <select id="selectExamAndPaper" resultType="com.lazy.vm.domain.vo.PaperAdaptedVo">
        SELECT paper.id          id,
               paper.user_id     userId,
               u.nick_name       nickName,
               paper.title,
               paper.total_score totalScore,
               qu_count          quCount,
               exam.id           examId,
               user_score        userScore,
               qualify_score     qualifyScore,
               total_time        totalTime,
               limit_count       limitCount,
               limit_time        limitTime,
               paper.status      status,
               exam.thanks       thanks
        FROM edu_exam_paper paper
                 LEFT JOIN edu_exam exam ON exam.id = paper.exam_id
                 LEFT JOIN sys_user u on paper.user_id = u.user_id
        WHERE paper.id = #{id}
    </select>
    <select id="selectExamCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM edu_exam_paper
        WHERE exam_id = #{examId}
          and user_id = #{userId}
    </select>

    <insert id="insertExamPaper" parameterType="ExamPaper">
        insert into edu_exam_paper
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="title != null and title != ''">title,</if>
            <if test="totalScore != null">total_score,</if>
            <if test="type != null">type,</if>
            <if test="category != null">category,</if>
            <if test="quCount != null">qu_count,</if>
            <if test="examId != null">exam_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="userScore != null">user_score,</if>
            <if test="status != null">status</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="userId != null">#{userId},</if>
            <if test="title != null and title != ''">#{title},</if>
            <if test="totalScore != null">#{totalScore},</if>
            <if test="type != null">#{type},</if>
            <if test="category != null">#{category},</if>
            <if test="quCount != null">#{quCount},</if>
            <if test="examId != null">#{examId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="userScore != null">#{userScore},</if>
            <if test="status != null">#{status}</if>
        </trim>
    </insert>

    <update id="updateExamPaper" parameterType="ExamPaper">
        update edu_exam_paper
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="totalScore != null">total_score = #{totalScore},</if>
            <if test="type != null">type = #{type},</if>
            <if test="category != null">category = #{category},</if>
            <if test="quCount != null">qu_count = #{quCount},</if>
            <if test="examId != null">exam_id = #{examId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="userScore != null">user_score = #{userScore},</if>
            <if test="status != null">status = #{status}</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExamPaperById" parameterType="String">
        delete
        from edu_exam_paper
        where id = #{id}
    </delete>

    <delete id="deleteExamPaperByIds" parameterType="String">
        delete from edu_exam_paper where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectUserExamPaperByUserId" parameterType="String" resultMap="ExamPaperResult">
        select id,
               user_id,
               title,
               total_score,
               type,
               category,
               qu_count,
               exam_id,
               create_time,
               update_time,
               user_score,
               status
        from edu_exam_paper
        where user_id = #{userid}

    </select>
    <select id="selectExamPaperByExamId" resultType="ExamPaper">
        select e.id,
        s.nick_name userId,
        e.title,
        e.`type`,
        e.category,
        e.qu_count quCount,
        e.exam_id examId,
        e.create_time createTime,
        e.update_time updateTime,
        e.user_score userScore,
        e.total_score totalScore,
        e.status,
        a.qualify_score qualifyScore
        from edu_exam_paper e left join sys_user s on e.user_id=s.user_id
        left join edu_exam a on a.id = e.exam_id
        <where>
            exam_id = #{id}
            <if test="status != null">and e.status = #{status}</if>
        </where>
        ORDER BY e.create_time DESC
    </select>
    <select id="userStat" resultType="com.lazy.vm.domain.vo.Stat">
        SELECT
        IF(max(user_score) > x.qualify_score,true,false) passed,
        p.exam_id examId,
        u.nick_name nickName,
        u.user_id userId,
        count(*) `count`,
        max(user_score) `max`
        FROM edu_exam_paper p
        left join edu_exam x on p.exam_id = x.id
        left join sys_user u on p.user_id = u.user_id
        WHERE p.exam_id = #{examId}
        <if test="nickName!=null and nickName!=''">
            and u.nick_name like concat('%',#{nickName},'%')
        </if>
        GROUP BY p.user_id
    </select>
    <select id="selectPaging" resultType="com.lazy.vm.domain.vo.PaperAdaptedVo">
        SELECT
               p.id,
               p.exam_id examId,
               e.limit_count limitCount,
               e.limit_time limitTime,
               e.qualify_score qualifyScore,
               e.total_score totalScore,
               e.total_time totalTime,
               p.user_id userId,
               p.status,
               p.user_score userScore,
               p.create_time createTime
        FROM edu_exam_paper p
                 left join edu_exam e on p.exam_id = e.id
        where p.exam_id = #{examId}
          and p.user_id = #{userId}
    </select>




    <resultMap type="PaperAdaptedVo" id="AllExamPaper">
        <result property="id" column="pid"/>
        <result property="userId" column="puserId"/>
        <result property="nickName" column="nickName"/>
        <result property="title" column="ptitle"/>
        <result property="totalScore" column="ptotalScore"/>
        <result property="quCount" column="pquCount"/>
        <result property="userScore" column="puserScore"/>
        <result property="examId" column="pexamId"/>
        <result property="qualifyScore" column="pqualifyScore"/>
        <result property="totalTime" column="ptotalTime"/>
        <result property="createTime" column="pcreateTime"/>
        <collection property="groupList" javaType="List" resultMap="examGroupVo"/>
    </resultMap>
    <resultMap id="examGroupVo" type="examGroupVo">
        <result property="id" column="gid"/>
        <result property="paperId" column="gpaperId"/>
        <result property="paperId" column="gpaperId"/>
        <result property="perScore" column="gperScore"/>
        <result property="quCount" column="gquCount"/>
        <result property="title" column="gtitle"/>
        <result property="totalScore" column="gtotalScore"/>
        <collection property="quList" resultMap="com.lazy.vm.mapper.ExamAnswerMapper.ExamAnswerVoResult" ></collection>
    </resultMap>
    <select id="selectAllPaper" resultMap="AllExamPaper">

        SELECT
            p.id pid,
            p.user_id puserId,
            u.nick_name nickName,
            p.create_time pcreateTime,
            p.title ptitle,
            p.total_score ptotalScore,
            p.qu_count pquCount,
            p.user_score puserScore,
            p.exam_id pexamId,
            g.id gid,
            g.paper_id gpaperId,
            g.per_score gperScore,
            g.qu_count gquCount,
            g.title gtitle,
            g.total_score gtotalScore,
            a.id id,
            a.is_right
        FROM
            edu_exam_paper p
                LEFT JOIN sys_user u on u.user_id = p.user_id
                LEFT JOIN edu_exam_group g ON p.id = g.paper_id
                LEFT JOIN edu_exam_answer a ON a.group_id = g.id

    </select>

</mapper>
